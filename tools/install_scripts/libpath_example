#! /bin/bash
#
# author: Antonio Cervone <ant.cervone@gmail.com>
# date:   05-12-2012
#

# list of packages
# the key should be:
# - INSTALL : the package will be installed by this script
# - YES     : the package is already installed in the system, and its paths
#             must be specified in the following variables
# - NO      : the package will not be used
# BEWARE! some packages are required and cannot be set to NO!!

source config

#####################
# REQUIRED PACKAGES
#####################

# MPI
# this package cannot be installed!
# mpi_base and mpi_bin must always be set.
# If the mpi installation comes from the system typically:
# mpi_base=/usr
mpi=YES
mpi_base=/usr
mpi_bin=${mpi_base}/bin

# BLAS
# this package cannot be installed!
# Typical installation do not require to set the blas_names variable
# If needed, blas_names must be a list of ;-separated library names
# enclosed in double quotes,
# e.g. "liba.a;libb.a"
blas=YES
blas_lib=/usr/lib
blas_names=

# LAPACK
# this package cannot be installed!
# Typical installation do not require to set the lapack_names variable
# If needed, lapack_names must be a list of ;-separated library names
# enclosed in double quotes,
# e.g. "liba.a;libb.a"
lapack=YES
lapack_lib=/usr/lib
lapack_names=

# CMAKE
cmake=INSTALL
cmake_bin=${INSTALL_DIR}/lib/cmake/bin

# PARMETIS
parmetis=INSTALL
parmetis_include=${INSTALL_DIR}/lib/parmetis/include
parmetis_lib=${INSTALL_DIR}/lib/parmetis/lib

# BOOST
boost=INSTALL
boost_include=${INSTALL_DIR}/lib/boost/include

# TRILINOS
trilinos=INSTALL
trilinos_include=${INSTALL_DIR}/lib/trilinos/include
trilinos_lib=${INSTALL_DIR}/lib/trilinos/lib

# LIFEV
# this is for LifeV developers
lifev=INSTALL
lifev_src=${HOME}/lifev-env/lifev
lifev_build=${HOME}/lifev-env/build
lifev_install=${HOME}/lifev-env/install
# additional flags for linking
lifev_flags=

#LIFEV LIB
# this is to use LifeV as an external library
lifevlib=NO
lifevlib_include=${INSTALL_DIR}/lib/lifev/include
lifevlib_lib=${INSTALL_DIR}/lib/lifev/lib
lifevlib_src=/path/to/lifev_src
# additional flags for linking
lifevlib_flags=

#####################
# OPTIONAL PACKAGES
#####################

# HDF5
hdf5=INSTALL
hdf5_include=${INSTALL_DIR}/lib/hdf5/include
hdf5_lib=${INSTALL_DIR}/lib/hdf5/lib

# SUITESPARSE
suitesparse=INSTALL
suitesparse_include=${INSTALL_DIR}/lib/suitesparse/include
suitesparse_lib=${INSTALL_DIR}/lib/suitesparse/lib

# SUPERLU
#superlu=NO
#superlu_include=${INSTALL_DIR}/opt/superlu-4.0/include
#superlu_lib=${INSTALL_DIR}/opt/superlu-4.0/lib

# SUPERLU_DIST
superlu_dist=INSTALL
superlu_dist_include=${INSTALL_DIR}/lib/superlu_dist/include
superlu_dist_lib=${INSTALL_DIR}/lib/superlu_dist/lib

# QHULL
qhull=INSTALL
qhull_include=${INSTALL_DIR}/lib/qhull/include
qhull_lib=${INSTALL_DIR}/lib/qhull/lib

########################
# EXPERIMENTAL PACKAGES
########################

# DUMMY
dummy=NO
dummy_include=
dummy_lib=

# CLANG
clang=NO
clang_bin=${INSTALL_DIR}/lib/clang/bin

# OPENMPI
openmpi=NO
openmpi_bin=${INSTALL_DIR}/lib/openmpi/bin

#####################################
# INTERNAL DEFINITIONS - DO NOT EDIT
#####################################

package_array=( clang openmpi mpi dummy blas lapack cmake boost parmetis hdf5
                suitesparse superlu superlu_dist qhull trilinos lifev lifevlib )

package_install=()
package_yes=()
package_no=()

if [ $blas_names != "" ]; then
  IFS=';' read -a blas_array <<< "$blas_names"
  blas_libs=""
  for lib in "${blas_array[@]}"; do
    blas_libs+=$(echo "$blas_lib/$lib ")
  done
  echo_bdg "blas_libs = $blas_libs"
fi

if [ $lapack_names != "" ]; then
  IFS=';' read -a lapack_array <<< "$lapack_names"
  lapack_libs=""
  for lib in "${lapack_array[@]}"; do
    lapack_libs+=$(echo "$lapack_lib/$lib ")
  done
  echo_bdg "lapack_libs = $lapack_libs"
fi

