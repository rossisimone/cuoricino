# -*- autoconf -*-
#
#
AC_INIT([lifev], [2.2.0], [lifev-dev@googlegroups.com])

LIFEV_VERSION_MAJOR=2
LIFEV_VERSION_MINOR=2
LIFEV_VERSION_MICRO=0
LIFEV_VERSION_EXTRA=
AC_SUBST(LIFEV_VERSION_MAJOR)
AC_SUBST(LIFEV_VERSION_MINOR)
AC_SUBST(LIFEV_VERSION_MICRO)
AC_SUBST(LIFEV_VERSION_EXTRA)
AC_DEFINE_UNQUOTED(LIFEV_VERSION_MAJOR,$LIFEV_VERSION_MAJOR,[major version number])
AC_DEFINE_UNQUOTED(LIFEV_VERSION_MINOR,$LIFEV_VERSION_MINOR,[minor version number])
AC_DEFINE_UNQUOTED(LIFEV_VERSION_MICRO,$LIFEV_VERSION_MICRO,[micro version number])
AC_DEFINE_UNQUOTED(LIFEV_VERSION_EXTRA,$LIFEV_VERSION_EXTRA,[extra version information: date, cvs, ...])

LIFEV_PACKAGE=lifev
LIFEV_VERSION=${LIFEV_VERSION_MAJOR}.${LIFEV_VERSION_MINOR}.${LIFEV_VERSION_MICRO}${LIFEV_VERSION_EXTRA}

AC_DEFINE_UNQUOTED(LIFEV_VERSION_STRING,["${LIFEV_VERSION_MAJOR}.${LIFEV_VERSION_MINOR}.${LIFEV_VERSION_MICRO} (${LIFEV_VERSION_EXTRA})"],[LifeV version string])


PACKAGE=$LIFEV_PACKAGE
VERSION=$LIFEV_VERSION

AC_SUBST(LIFEV_PACKAGE)
AC_SUBST(LIFEV_VERSION)



AC_CONFIG_AUX_DIR(admin)

dnl What the current system and host
AC_CANONICAL_HOST
AC_CANONICAL_SYSTEM


AM_INIT_AUTOMAKE([foreign 1.7.8])
AM_CONFIG_HEADER(lifeconfig.h)

LIFEV_CHECK_COMPILERS


AC_ENABLE_STATIC
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

dnl under amd64 size_t, unsigned do not have the same type
dnl AC_CHECK_TYPE(size_t, unsigned)

AC_MSG_CHECKING(for size_t == uint)
AC_TRY_RUN(AC_LANG_PROGRAM([
#include <cstdlib>
],[
return !(sizeof(size_t)==sizeof(unsigned int));
]),
[
   AC_MSG_RESULT(yes)
   size_t_same_as_uint=yes
   AC_DEFINE(LIFEV_SIZET_SAME_AS_UINT, 1, [sizeof(size_t)==sizeof(unsigned int)])
],
[
  AC_MSG_RESULT(no)
  size_t_same_as_uint=no
])

dnl AC_LANG_RESTORE

# pdflatex
AC_CHECK_PROG(PDFLATEX, pdflatex,[pdflatex],[no])

# doxygen
AC_CHECK_PROG(DOXYGEN, doxygen, [doxygen], [no-doxygen] )
AC_CHECK_PROG(LIFE_HAS_DOT, dot, [yes] )

dnl
dnl checks for some scientific computing libraries
dnl
dnl libm
AC_CHECK_LIB(m,cos,[LIBS="-lm ${LIBS}"],[ echo "simple math functions not found"; exit 1;])
dnl umfpack
dnl disable it for not since it is not used yet: need to check for "NO"
dnl AC_CHECK_UMFPACK(4.3.0) # at least umfpack 4.3
dnl AM_CONDITIONAL(HAVE_UMFPACK, test "x$umfpack_libs" != "x" )

dnl lapack, blas
AC_CHECK_LAPACK
AC_CHECK_UMFPACK
dnl AM_CONDITIONAL(HAVE_UMFPACK, test "x$umfpack_libs" != "x" )

dnl hypre
AC_CHECK_HYPRE

dnl y12m
AC_CHECK_Y12M

dnl hdf5
AC_CHECK_HDF5

dnl parmetis
AC_CHECK_PARMETIS

dnl trilinos
AC_CHECK_TRILINOS
dnl petsc
dnl AC_CHECK_PETSC(2.1.6) #
AM_CONDITIONAL(HAVE_PETSC, test "x$petsc_libs" != "x" )

dnl grace, commented since not used any more
dnl AC_CHECK_HEADERS([grace_np.h])
dnl AC_CHECK_LIB([grace_np],GraceClose,[grace_libs="-lgrace_np"],[grace_libs=""])
dnl AC_SUBST(grace_libs)

AC_CHECK_BOOST
dnl AC_CHECK_BOOST_GRAPH
dnl AC_CHECK_BOOST_SIGNALS
dnl AC_CHECK_BOOST_REGEX
dnl AC_CHECK_BOOST_UNIT_TEST_FRAMEWORK
AC_CHECK_BOOST_SPIRIT

dnl AC_CHECK_QHULL
AC_CHECK_QHULL

dnl disabling boost_program_options
dnl AC_CHECK_BOOST_PROGRAM_OPTIONS
dnl AM_CONDITIONAL(HAVE_BOOST_PROGRAM_OPTIONS, test "x$boost_program_options_error" = "xno")

dnl extra ldflags, useful for clusters (eg. cscs)
AC_CHECK_EXTRA_LDFLAGS

CPPFLAGS="-I\${top_srcdir} ${CPPFLAGS}"

life_libs="\${top_builddir}/life/lifefunctions/liblifefunctions.la \${top_builddir}/life/lifefilters/liblifefilters.la \${top_builddir}/life/lifesolver/liblifesolver.la  \${top_builddir}/life/lifefem/liblifefem.la \${top_builddir}/life/lifealg/liblifealg.la \${top_builddir}/life/lifemesh/liblifemesh.la \${top_builddir}/life/lifearray/liblifearray.la \${top_builddir}/life/lifecore/liblifecore.la"

AC_SUBST(life_libs)
LIFEV_LIBS="-llifefunctions -llifefilters -llifesolver -llifefem -llifealg -llifemesh -llifearray -llifecore"


#
# setting prefix
#
prefix=${prefix:-"/usr"}
if test "x${prefix}" = "xNONE"; then
    prefix=/usr
fi


dnl testdir
AC_CONFIG_TESTDIR(testsuite)

dnl pkgconfig
AX_CREATE_PKGCONFIG_INFO(life.pc,,[${LIFEV_LIBS} $LIBS],[Finite Element Library and more],[$CPPFLAGS $CFLAGS])
