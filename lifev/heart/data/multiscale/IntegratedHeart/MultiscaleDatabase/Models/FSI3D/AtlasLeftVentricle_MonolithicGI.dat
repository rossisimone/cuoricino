###################################################################################################
#
#                       This file is part of the LifeV Library
#                Copyright (C) 2004, 2005, 2007 EPFL, Politecnico di Milano, INRIA
#                Copyright (C) 2010 EPFL, Politecnico di Milano, Emory University
#
#      Author(s): Toni Lassila <toni.lassila@epfl.ch>#                
#           Date: 2013-03-12
#  License Terms: GNU LGPL
#
###################################################################################################
### MODEL: FSI3D - Left ventricle based on atlas shape average ####################################
###################################################################################################

[Multiscale]
modelName            = FSI3D_AtlasLeftVentricle_MonolithicFI
modelType            = FSI3D
couplingFlags        = '208 213'
flowRateCouplingType = 'weak weak'


[exporter]
start            = 0             # start index for filenames
save             = 1             # how many time steps per posptrocessing
multimesh        = false         # true if the mesh has to be saved at each post-processing step
type             = hdf5

[importer]
type             = hdf5



[problem]
method      = monolithicGI # monolithicGE, monolithicGI

blockOper   = AdditiveSchwarzGI # AdditiveSchwarz   AdditiveSchwarzRN
                                  AdditiveSchwarzGI AdditiveSchwarzRNGI

DDBlockPrec = ComposedDNGI # OPTIONS:
                           #AdditiveSchwarz: monolithic A-S preconditioner,
                           #AdditiveSchwarzGI: monolithic A-S preconditioner,
                           #ComposedDN: modular Dirichlet-Neumann preconditioner
                           #ComposedDN2: modular Dirichlet-Neumann preconditioner
                           #ComposedNN: modular Neumann-Neumann + Dirichlet-Dirichlet preconditioner
                           #ComposedDNND: modular Dirichlet-Neumann + Neumann-Dirichlet preconditioner
                           #ComposedDNGI: modular preconditioner for the geometric implicit, split in 3 factors
                           #ComposedDN2GI: modular preconditioner for the geometric implicit, split in 3 factors
                           #ComposedDNDGI: under testing, do not use
                           #ComposedDND2DGI: under testing, do not use


reducedFluid = 0    # 0 = exact, 1 = inexact
defOmega     = 0.01 # usually 0.01 for precond = 0 or 1; -1 for precond = 2
defOmegaS    = 0.01 # matters only with  precond = 2
defOmegaF    = 0.01 # matters only with  precond = 2

linesearch   = 0
updateEvery  = 1
# NonLinearRichardson: stop_tol  = abstol + reltol*normRes;
abstol       =  0.    # tolerance in nonLinearRichardson
reltol       =  1.e-7 # tolerance in nonLinearRichardson
restart      = 0
maxSubIter   = 50
fluidMeshPartitioned = none
solidMeshPartitioned = none



[fluid]
useShapeDerivatives     = true
conservativeFormulation = false  # tells if the conservative or non conservative formulation is used

    [./physics] # Defined here only if different from the one in the main file.
    material_flag    = 215
    #density         = 1.0             # density   [g/cm^3]
    #viscosity       = 0.035           # viscosity [g/cm/s]

    [../time_discretization]
    method           = BDF             # Newmark, BDF
    BDF_order        = 2
    theta            = 0.25
    gamma            = 0.50
    #rhoInf           = 1
    #typeOfGeneralizedAlpha = HHT

    [../space_discretization]
    mesh_dir        = ./Mesh/    
    mesh_file       = leftventricle5_refined1.mesh
    mesh_type       = .mesh
    verbose         = 0                # verbose during mesh-reading

    vel_order       = P1               # P1, P1Bubble, P2
    mesh_order      = P1               # P1, P2
    press_order     = P1               # P1, P2
    stiff_strain    = true             # true: sigma with grad( u )^T, false: sigma without it
    div_beta_u_v    = false            # 1=on, 0=off
    diagonalize     = 0                # weight, 0=off
    stabilization   = 'ip'             # "none": none, "ip": Interior Penalty, "sd":Stream-line diffusion

    [../miscellaneous]
    verbose   = 0
    steady    = 0
    factor    = 1

    [../ipstab]
    use             = 1                 # boolean telling if the stabilization is added
    gammaBeta       = 1
    gammaDiv        = 0.2
    gammaPress      = 0.05
    max_iter_reuse  = 100
    reuse           = true

    [../boundary_conditions]
    list = 'TopCardium'

        [./TopCardium]
        type            = EssentialVertices
        flag            = 209
        mode            = Full
        component       = 3
        function        = 0

        [../]

    [../]



[solid]
useExactJacobian = false # always false for linear structure model. Otherwise it allows to chose beween an exact-inexact Newton scheme
rescaleFactor    = 1.0   # this factor can be used to rescale the structure block

    [./physics]
#   LINEAR MATERIAL INCLUDED MAINLY FOR QUICK TESTS
    lawType           = linear
    solidType         = linearVenantKirchhoff
    material_flag     = 42
    externalPressure  = 0
    density           = 1.37     
    young             = 7.0E6
    poisson           = 0.48     

#    solidType         = neoHookeanActivated
#    lawType           = nonlinear
#    material_flag     = 42
#    externalPressure  = 0
#    density           = 1.37     # Watanabe et al 04
#    bulk              = 1.6E6    # Weiss et al 06
#    young             = 6.2726E4 # Weiss et al 06
#    poisson           = 0.48     

    [../time_discretization]
    method           = BDF            # Newmark, BDF
    BDF_order        = 2
    theta            = 0.25
    gamma            = 0.50
    #rhoInf           = 1
    #typeOfGeneralizedAlpha = HHT

    [../space_discretization]
    mesh_dir         = ./Mesh/
    mesh_file        = biventricle5_refined1.mesh # mesh file
    mesh_type        = .mesh
    fibers_file      = FineFiberDirection.xmf # fiber directions file
    order            = P1
    mesh_faces       = all                    # update all faces elements
    mesh_edges       = all                    # update all faces elements

    [../miscellaneous]
    verbose    = 0
    depname    = dep

    [../boundary_conditions]
    list = 'Pericardium RightVentricle Apex'

        [./Pericardium]
        type       = Natural
        flag       = 46
        mode       = Normal
        functionFile = FunctionsDatabase/TestForce.dat

	[../RightVentricle]
        type       = Natural
        flag       = 45
        mode       = Normal
        function   = '10000'

	[../Apex]
	type       = Essential
	flag       = 41
	mode       = Full
        component  = 3
	function   = 0
        [../]

    [../]



[interface] # mesh dependent flags for the interface.
fluid_flag      =  207      # default: 1
structure_flag  =  43       # default: same as fluid_flag
tolerance       =  0.005    # how far points are to be considered the same on the interface



[mesh_motion]

    [./time_discretization]
    method           = BDF             # Newmark, BDF
    BDF_order        = 2
    theta            = 0.25
    gamma            = 0.50
    #rhoInf           = 1
    #typeOfGeneralizedAlpha = HHT

    [../solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = none # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-9

    [../prec]
    #prectype                = AztecOO
    prectype                = Ifpack
    displayList             = false

        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 10
            ilut_level-of-fill     = 4
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../]

    [../boundary_conditions]
    list = ' '

        [./Inlet]
        type       = Essential
        flag       = 210
        mode       = Full
        component  = 3
        function   = 0

        [../Outlet]
        type       = Essential
        flag       = 209
        mode       = Full
        component  = 3
        function   = 0

        [../Top]
        type       = EssentialVertices
        flag       = 208
        mode       = Full
        component  = 3
        function   = 0

        [../]

    [../]



[linear_system]

    [./solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = none # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-9

    [../prec]
    reuse                   = false
    prectype                = Composed #AztecOO
    displayList             = false

        [./robin]
        alphaf = 0.
        alphas = 0.5 # parameters for Robin-Robin DDBlock preconditioner

        [../Composed]
        list                = 'Ifpack Ifpack Ifpack'
        sections            = 'ifpack ifpack ifpack'

        [../AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 4
            ilut_level-of-fill     = 10
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../ML]
            default_parameter_list = DD    # for ML precond, SA, DD, DD-ML, maxwell, NSSA, DD-ML-LU, DD-LU
            prec_type              = two-level-additive
            displayList            = false

            [./smoother]
                type               = IFPACK
            [../]

        [../]

    [../]



#[eigensolver]
#nevec        = 10
#block_size   = 1;
#max_blocks   = 1000;
#max_restarts = 1000;
#tol          = 1e-5;
#which        = ML
#neval        = 5
